"""Internationalization utilities for Streamlit UI."""
from __future__ import annotations

from typing import Dict

_DEFAULT_LANGUAGE = "en"
_LANGUAGE_WIDGET_KEY = "language_selector"
_LANGUAGE_CHOICES = [
    ("en", "English"),
    ("zh", "‰∏≠Êñá"),
]

TRANSLATIONS: Dict[str, Dict[str, str]] = {
    "en": {
        "common.language_label": "Language / ËØ≠Ë®Ä",
        "common.start_date": "Start Date",
        "common.end_date": "End Date",
    "app.title": "üìà Me Trade",
        "app.subtitle": "Natural Language-Driven Backtesting for U.S. Stocks & Options",
        "app.home.content": (
            "Welcome to **Me Trade**, a lightweight application for testing trading strategies using natural language.\n\n"
            "### üöÄ Quick Start\n\n"
            "1. **Data** - Download stock and option data from Yahoo Finance\n"
            "2. **Strategy Builder** - Describe your strategy in plain English or structured JSON\n"
            "3. **Backtest** - Run your strategy against historical data\n"
            "4. **Results** - Analyze performance metrics and compare to benchmarks\n\n"
            "### üìä Features\n\n"
            "- **Natural Language Strategy Definition** - Describe strategies in plain English\n"
            "- **Multiple Data Sources** - Yahoo Finance for stocks and options\n"
            "- **Comprehensive Backtesting** - Powered by Backtrader\n"
            "- **Benchmark Comparison** - Compare against VOO, SPY, QQQ\n"
            "- **Risk Metrics** - Sharpe, Sortino, Calmar ratios, max drawdown\n"
            "- **Local Storage** - SQLite database for data and results\n\n"
            "### üéØ Supported Symbols (Initial Focus)\n\n"
            "{symbols}\n\n"
            "### üìñ How to Use\n\n"
            "Navigate using the sidebar to access different sections:\n\n"
            "- **Data**: Download and manage market data\n"
            "- **Strategy Builder**: Create and edit trading strategies  \n"
            "- **Backtest**: Execute strategies and view basic results\n"
            "- **Results**: Detailed analysis and metrics visualization\n\n"
            "### ‚öôÔ∏è Configuration\n\n"
            "- **Initial Capital**: ${initial_cash:,.0f}\n"
            "- **Commission**: ${commission:.4f} per share\n"
            "- **Slippage**: {slippage_bps} basis points\n\n"
            "---\n\n"
            "**Get Started**: Use the sidebar to navigate to the Data page and download some market data!"
        ),
    "app.sidebar.navigation_heading": "### üß≠ Navigation",
        "app.sidebar.database_info_heading": "### üìä Database Info",
        "app.sidebar.cached_symbols": "Cached Symbols",
        "app.sidebar.saved_strategies": "Saved Strategies",
        "app.sidebar.total_backtests": "Total Backtests",
        "app.sidebar.about_heading": "### ‚ÑπÔ∏è About",
        "app.sidebar.about_content": (
            "**Version**: 0.1.0 (MVP)\n\n"
            "**Tech Stack**:\n"
            "- Streamlit (UI)\n"
            "- Backtrader (Backtesting)\n"
            "- yfinance (Data)\n"
            "- SQLite (Storage)\n"
            "- Plotly (Charts)\n\n"
            "**Source**: [GitHub](#)"
        ),
        "backtest.title": "Run Backtest",
        "backtest.subtitle": "Execute strategies and analyze results",
        "backtest.warning.no_strategies": "No strategies available. Create one in the Strategy Builder first!",
        "backtest.section.select_strategy": "1. Select Strategy",
        "backtest.form.choose_strategy": "Choose a strategy",
        "backtest.error.no_code": "No code found for this strategy!",
        "backtest.expander.strategy_details": "Strategy Details",
        "backtest.section.configure": "2. Configure Backtest",
        "backtest.form.universe": "Trading Universe (symbols)",
        "backtest.warning.missing_data": "Missing data for: {symbols}",
        "backtest.info.download_data": "Download data in the Data page first!",
        "backtest.form.initial_cash": "Initial Capital ($)",
        "backtest.form.commission": "Commission per share ($)",
        "backtest.form.slippage": "Slippage (basis points)",
        "backtest.section.benchmarks": "3. Select Benchmarks",
        "backtest.form.compare_against": "Compare against",
        "backtest.button.run": "üöÄ Run Backtest",
        "backtest.spinner.running": "Running backtest... This may take a moment.",
        "backtest.success.completed": "‚úì Backtest completed! ID: {bt_id}",
        "backtest.section.results_summary": "Results Summary",
        "backtest.metric.starting_value": "Starting Value",
        "backtest.metric.ending_value": "Ending Value",
        "backtest.metric.total_return": "Total Return",
        "backtest.metric.total_trades": "Total Trades",
        "backtest.info.view_results": "View detailed results in the Results page",
        "backtest.error.failed": "Backtest failed: {message}",
        "backtest.error.exception": "Backtest error: {message}",
        "backtest.section.recent": "Recent Backtests",
        "backtest.recent.item": "{status_icon} **{name}** - {bt_id} - Return: {return_str} - {created}",
        "backtest.info.no_backtests": "No backtests run yet",
        "data.title": "Data Management",
        "data.subtitle": "Download and manage stock and options data",
    "data.favorites.header": "Favorite Symbols",
    "data.favorites.help": "These symbols appear at the top of selectors across the Data page.",
    "data.favorites.list": "Favorites: {symbols}",
    "data.favorites.list_empty": "Favorites: none yet",
    "data.favorites.add_label": "Add symbol",
    "data.favorites.add_placeholder": "e.g. SPY",
    "data.favorites.add_button": "Add",
    "data.favorites.add_invalid": "Enter a symbol before adding.",
    "data.favorites.add_exists": "{symbol} is already in favorites.",
    "data.favorites.add_success": "Added {symbol} to favorites.",
    "data.favorites.remove_label": "Remove symbol",
    "data.favorites.remove_button": "Remove",
    "data.favorites.remove_success": "Removed {symbol} from favorites.",
    "data.favorites.remove_empty": "No favorite symbols to remove.",
        "data.tabs.stocks": "üìà Stocks",
        "data.tabs.options": "üìä Options",
        "data.tabs.benchmarks": "üéØ Benchmarks",
        "data.tabs.indicators": "üìâ View Indicators",
    "data.stocks.header": "Daily Price Data",
        "data.stocks.download_title": "Refresh Daily Price Cache",
        "data.stocks.symbols_label": "Symbols (comma-separated)",
        "data.stocks.symbols_help": "Enter ticker symbols to refresh their daily price history",
        "data.stocks.fixed_window_note": "Daily downloads cover a fixed window from {start} to {end}.",
        "data.stocks.download_full_button": "Redownload Full History (2019‚ÜíToday)",
        "data.stocks.download_latest_button": "Download Latest Daily Bars",
        "data.stocks.spinner": "Fetching daily bars...",
        "data.stocks.download_success": "‚úì Downloaded {rows} rows for {symbol_count} symbols",
        "data.stocks.download_latest_up_to_date": "No updates required; cache is already current.",
        "data.stocks.download_latest_up_to_date_with_date": "All selected symbols already include data through {date}.",
        "data.stocks.download_latest_skipped": "Skipped {count} symbols with no newer data: {symbols}",
        "data.stocks.no_symbols": "Enter at least one symbol to update the cache.",
        "data.stocks.last_cached_info": "Most recent cached date: {date} (covering {count} of {total} symbols).",
        "data.stocks.last_cached_missing": "No cached data found for these symbols.",
        "data.common.download_failed": "Some downloads failed:",
        "data.common.success_item": "- {symbol}: {rows} rows",
        "data.common.error_item": "- {symbol}: {error}",
        "data.stocks.cached_title": "Daily Cache Overview",
        "data.stocks.cached_none": "No cached data yet",
        "data.stocks.cached_page_size": "Rows per page",
        "data.stocks.cached_page": "Page",
        "data.stocks.cached_stats": "Showing page {page} of {pages} ({total} symbols).",
        "data.stocks.cached_selector_label": "Jump to symbol",
        "data.stocks.cached_col_symbol": "Symbol",
        "data.stocks.cached_col_rows": "Rows",
        "data.stocks.cached_col_start": "First Date",
        "data.stocks.cached_col_end": "Last Date",
        "data.stocks.viewer_title": "Inspect Daily Bars",
        "data.stocks.viewer_select_label": "Symbol",
        "data.stocks.viewer_page_size": "Rows per page",
        "data.stocks.viewer_page": "Page",
        "data.stocks.viewer_empty": "No cached data available yet.",
        "data.stocks.viewer_no_rows": "No daily bars cached for this symbol yet.",
        "data.stocks.viewer_stats": "Showing page {page} of {pages} ({total} rows).",
        "data.stocks.delete_symbol_section_title": "Delete all data for {symbol}",
        "data.stocks.delete_symbol_confirm": "Yes, delete all data for {symbol}",
        "data.stocks.delete_symbol_button": "Delete symbol data",
        "data.stocks.delete_symbol_success": "Removed {equity_rows} equity rows and {indicator_rows} indicator rows for {symbol}.",
        "data.stocks.delete_symbol_failure": "Failed to delete {symbol}: {error}",
        "data.stocks.delete_all_title": "Clear entire equity cache",
        "data.stocks.delete_all_warning": "This removes **all** stored prices and indicators. This action cannot be undone.",
        "data.stocks.delete_all_confirm": "Yes, delete everything",
        "data.stocks.delete_all_button": "Delete all equity data",
        "data.stocks.delete_all_success": "Cleared {equity_rows} equity rows and {indicator_rows} indicator rows.",
        "data.stocks.bulk_title": "Download Top S&P 500 Bundle",
        "data.stocks.bulk_description": (
            "Download 100 popular S&P 500 constituents since January 1, 2019 plus key ETFs "
            "(VOO, QQQ, SPY, ARK funds, VTI, VT, IWM, EFA, EEM, DIA) and major "
            "indices (S&P 500, NASDAQ-100, Dow Jones, Russell 2000, VIX)."
        ),
        "data.stocks.bulk_button": "Download Top S&P 500 + ETFs",
        "data.stocks.bulk_spinner": "Downloading curated S&P 500 bundle...",
        "data.stocks.bulk_success": "‚úì Downloaded data for {count} symbols (of {total}) totaling {rows} rows.",
        "data.stocks.bulk_failed_summary": "Failed symbols ({count}):",
        "data.stocks.bulk_error": "Download failed: {error}",
        "data.stocks.bulk_error_lxml": "Download failed: missing dependency 'lxml'. Run `pip install lxml` and try again.",
        "data.stocks.bulk_error_ssl": (
            "Download failed: SSL certificate verification problem. Install system root certificates "
            "or update Python's certificate store, then retry."
        ),
        "data.stocks.bulk_symbol_total": "Universe size: {total} symbols.",
        "data.stocks.bulk_preview": "Preview (top 5): {preview}",
        "data.upload.title": "Upload Custom Data",
        "data.upload.file_label": "Upload CSV file",
        "data.upload.help": "CSV must have columns: date, open, high, low, close, volume",
        "data.upload.symbol_label": "Symbol for uploaded data",
        "data.upload.process_button": "Process Upload",
        "data.upload.success": "‚úì Uploaded {rows} rows for {symbol}",
        "data.upload.error": "Upload failed: {error}",
        "data.options.header": "Options Chain Data",
    "data.options.import_hint": "Tip: place Dolt CSV exports in `data/option_chain/` and use the importer above to populate this view.",
        "data.options.view_title": "View Cached Options",
        "data.options.select_symbol": "Select symbol",
        "data.options.available_expirations": "**Available expirations:** {count}",
        "data.options.select_expiration": "Expiration",
    "data.options.import_title": "Import Historical CSV Data",
    "data.options.import_help": "Load Dolt-exported CSV files from {path} into the local SQLite cache.",
    "data.options.import_button": "Import Option CSV Files",
    "data.options.import_spinner": "Importing CSV files...",
    "data.options.import_no_files": "No CSV files found in the option_chain folder.",
    "data.options.import_success": "‚úì Imported {rows} option rows from {files} file(s).",
    "data.options.import_error_summary": "Import completed with {count} file error(s):",
    "data.options.import_error_item": "- {file}: {error}",
    "data.options.no_cached_data": "No cached option data yet. Download or import data to begin.",
    "data.options.no_trade_dates": "No trade dates found for this symbol.",
    "data.options.select_trade_date": "Trade date",
    "data.options.trade_date_view": "Select trade date",
    "data.options.trade_date_prev": "Previous",
    "data.options.trade_date_next": "Next",
    "data.options.trade_date_latest": "Latest",
    "data.options.expiration_label": "Expiration",
    "data.options.expiration_prev": "Previous",
    "data.options.expiration_next": "Next",
    "data.options.expiration_latest": "Nearest",
    "data.options.no_expirations": "No expirations available for the selected trade date.",
    "data.options.table_page_size": "Rows per page",
    "data.options.table_page": "Page",
    "data.options.table_stats": "Showing page {page} of {pages} ({total} strikes)",
    "data.options.col.call_bid": "Call Bid",
    "data.options.col.call_ask": "Call Ask",
    "data.options.col.strike": "Strike",
    "data.options.col.put_bid": "Put Bid",
    "data.options.col.put_ask": "Put Ask",
    "data.options.greeks_none": "No call or put data available for the selected strike.",
    "data.options.greeks_side_label": "View details for",
    "data.options.side.call": "Call",
    "data.options.side.put": "Put",
    "data.options.metric.bid": "Bid",
    "data.options.metric.ask": "Ask",
        "data.options.row_label.underlying": "Underlying Close",
    "data.options.metric.last": "Last",
    "data.options.metric.mid": "Mid",
    "data.options.metric.volume": "Volume",
    "data.options.metric.open_interest": "Open Interest",
    "data.options.metric.implied_vol": "Implied Vol",
    "data.options.metric.delta": "Delta",
    "data.options.metric.gamma": "Gamma",
    "data.options.metric.theta": "Theta",
    "data.options.metric.vega": "Vega",
    "data.options.metric.rho": "Rho",
    "data.options.metric.price": "Price",
    "data.options.metric.generic": "Value",
    "data.options.greeks_title": "{side} contract details for strike {strike}",
    "data.options.timeline_no_data": "No historical records available for this contract.",
    "data.options.timeline_trade_title": "Daily prices ‚Ä¢ {side} ‚Ä¢ Strike {strike} ‚Ä¢ Exp {expiration}",
    "data.options.timeline_trade_greeks": "Daily Greeks ‚Ä¢ {side} ‚Ä¢ Strike {strike} ‚Ä¢ Exp {expiration}",
    "data.options.timeline_axis_trade_date": "Trade date",
    "data.options.timeline_axis_expiration": "Expiration date",
    "data.options.timeline_expiration_no_data": "No alternative expirations recorded for this date.",
    "data.options.timeline_expiration_title": "Expiration curve ‚Ä¢ {side} ‚Ä¢ Strike {strike} ‚Ä¢ Trade {trade_date}",
    "data.options.timeline_expiration_greeks": "Expiration Greeks ‚Ä¢ {side} ‚Ä¢ Strike {strike} ‚Ä¢ Trade {trade_date}",
        "data.options.no_data": "No option chain data available for this symbol",
    "data.options.delete_title": "Delete Option Data",
    "data.options.delete_symbol_label": "Select symbol to delete",
    "data.options.delete_symbol_confirm": "Remove all option data for {symbol}",
    "data.options.delete_symbol_button": "Delete symbol data",
    "data.options.delete_symbol_success": "‚úì Removed {rows} option rows for {symbol}.",
    "data.options.delete_all_title": "Delete All Cached Options",
    "data.options.delete_all_confirm": "I understand this removes every cached option row",
    "data.options.delete_all_button": "Delete all option data",
    "data.options.delete_all_success": "‚úì Removed {rows} option rows.",
        "data.benchmarks.header": "Benchmark Data",
        "data.benchmarks.description": "Download benchmark indices for comparison",
        "data.benchmarks.list": "**Benchmarks:** {symbols}",
        "data.benchmarks.start": "Benchmark Start Date",
        "data.benchmarks.end": "Benchmark End Date",
        "data.benchmarks.download_button": "Download Benchmarks",
        "data.benchmarks.spinner": "Downloading benchmark data...",
        "data.benchmarks.success": "‚úì Downloaded benchmark data",
        "data.benchmarks.success_item": "- {symbol}: {rows} rows",
        "data.benchmarks.failed": "Some downloads failed:",
        "data.benchmarks.cached_title": "Cached Benchmark Data",
        "data.indicators.header": "View Stock Data with Indicators",
        "data.indicators.no_data": "No stock data available. Please download data in the Stocks tab first.",
        "data.indicators.select_symbol": "Symbol",
        "data.indicators.date_range": "Date Range",
    "data.indicators.date_preset.label": "Quick range",
    "data.indicators.date_preset.custom": "Custom range",
    "data.indicators.date_preset.last_week": "Last Week",
    "data.indicators.date_preset.last_month": "Last Month",
    "data.indicators.date_preset.last_three_months": "Last 3 Months",
    "data.indicators.date_preset.last_year": "Last Year",
    "data.indicators.date_preset.last_two_years": "Last 2 Years",
    "data.indicators.date_preset.last_three_years": "Last 3 Years",
    "data.indicators.date_preset.last_five_years": "Last 5 Years",
        "data.indicators.from": "From",
        "data.indicators.to": "To",
        "data.indicators.section_title": "Overlay Indicators",
        "data.indicators.checkbox.sma20": "SMA 20",
        "data.indicators.checkbox.sma50": "SMA 50",
        "data.indicators.checkbox.sma200": "SMA 200",
        "data.indicators.checkbox.ema12": "EMA 12",
        "data.indicators.checkbox.ema26": "EMA 26",
        "data.indicators.checkbox.rsi": "RSI",
        "data.indicators.checkbox.macd": "MACD",
        "data.indicators.checkbox.bbands": "Bollinger Bands",
        "data.indicators.stored_available": "üìä Stored indicators available",
        "data.indicators.stored_missing": "‚ö†Ô∏è No stored indicators. Values will be calculated on the fly.",
        "data.indicators.refresh_button": "Refresh Indicators",
        "data.indicators.refresh_help": "Rebuild cached indicators from stored OHLCV data",
        "data.indicators.refresh_spinner": "Refreshing indicator cache...",
        "data.indicators.refresh_success": "‚úì Stored indicators refreshed",
        "data.indicators.refresh_no_source": "Raw OHLCV data for {symbol} is missing in the selected window.",
        "data.indicators.loading_spinner": "Loading indicators...",
        "data.indicators.load_no_data": "No data available for {symbol} in the selected date range",
    "data.indicators.chart_title": "{symbol} ¬∑ Price and Indicator Dashboard",
        "data.indicators.subplot.price": "Price",
        "data.indicators.subplot.rsi": "RSI",
        "data.indicators.subplot.macd": "MACD",
        "data.indicators.legend.close": "Close Price",
    "data.indicators.legend.candles": "Price candles",
        "data.indicators.legend.ema12": "EMA 12",
        "data.indicators.legend.bb_upper": "BB Upper",
        "data.indicators.legend.bb_middle": "BB Middle",
        "data.indicators.legend.bb_lower": "BB Lower",
        "data.indicators.legend.macd_signal": "Signal",
        "data.indicators.legend.macd_histogram": "Histogram",
        "data.indicators.xaxis.date": "Date",
        "data.indicators.yaxis.price": "Price ($)",
        "data.indicators.table_title": "Indicator Data",
        "data.indicators.table_page_size": "Rows per page",
        "data.indicators.table_page": "Page",
        "data.indicators.table_stats": "Showing page {page} of {pages} ¬∑ {total} rows total",
        "data.indicators.download_button": "Download full dataset",
        "builder.title": "Strategy Builder",
        "builder.subtitle": "Create trading strategies using natural language or structured definitions",
        "builder.tabs.define": "üìù Define Strategy",
        "builder.tabs.saved": "üíæ Saved Strategies",
        
        # Define Strategy Tab
        "builder.define.header": "Define Trade Strategy",
        "builder.define.description": "Describe your trading strategy in plain English or Chinese, and we'll convert it to all three formats",
        "builder.define.sample": (
            "Buy AAPL when the 50-day SMA crosses above the 200-day SMA and RSI is below 70.\n"
            "Sell with an 8% trailing stop or 15% profit target.\n"
            "Test from 2019-01-01 to 2024-12-31."
        ),
        "builder.define.nl_input_label": "Strategy Description",
        "builder.define.override_label": "Override Symbols (optional)",
        "builder.define.override_placeholder": "AAPL, MSFT, GOOGL",
        "builder.define.parse_button": "Parse Strategy",
        "builder.define.spinner": "Parsing strategy with LLM...",
        "builder.define.success": "‚úì Strategy parsed successfully into three formats!",
        
        # Three formats section
        "builder.define.formats_header": "Strategy Formats (All Editable)",
        "builder.define.format_human": "üìñ Human Readable",
        "builder.define.format_json": "‚öôÔ∏è JSON Definition",
        "builder.define.format_code": "üíª Backtrader Code",
        
        # Human Readable
        "builder.define.human_description": "A clear, structured description of your strategy",
        "builder.define.human_label": "Human-Readable Strategy",
        "builder.define.update_human": "Update Human Description",
        
        # JSON Definition
        "builder.define.json_description": "Structured JSON strategy definition (editable)",
        "builder.define.json_label": "Strategy JSON",
        "builder.define.validate_json": "Validate JSON",
        "builder.define.validate_success": "‚úì Strategy JSON is valid!",
        "builder.define.validate_error": "Validation error: {error}",
        "builder.define.compile_json": "Compile to Code",
        "builder.define.compile_success": "‚úì Code compiled and validated!",
        "builder.define.compile_warning": "Code compiled but has validation warnings:",
        "builder.define.compile_error": "Compilation error: {error}",
        
        # Backtrader Code
        "builder.define.code_description": "Complete Backtrader strategy class (editable)",
        "builder.define.code_label": "Backtrader Python Code",
        "builder.define.validate_code": "Validate Code",
        "builder.define.code_valid": "‚úì Code is valid!",
        "builder.define.code_warnings": "Code has validation warnings:",
        "builder.define.update_code": "Update Code",
        
        # Save section
        "builder.define.save_header": "Save Strategy",
        "builder.define.strategy_name": "Strategy Name",
        "builder.define.save_button": "üíæ Save Strategy",
        "builder.define.save_success": "‚úì Strategy saved! ID: {strategy_id}",
        "builder.define.save_error_no_data": "Please parse or define a strategy first",
        "builder.define.update_success": "‚úì Updated successfully!",
        
        # Saved Strategies Tab
        "builder.saved.header": "Saved Strategies",
        "builder.saved.id": "**ID:** {value}",
        "builder.saved.created": "**Created:** {value}",
        "builder.saved.format_human": "üìñ Human Readable",
        "builder.saved.format_json": "‚öôÔ∏è JSON",
        "builder.saved.format_code": "üíª Code",
        "builder.saved.human_label": "Human-Readable Description",
        "builder.saved.json_label": "JSON Definition",
        "builder.saved.code_label": "Backtrader Code",
        "builder.saved.validate_button": "Validate",
        "builder.saved.validate_success": "‚úì Valid!",
        "builder.saved.validate_error": "Error: {error}",
        "builder.saved.code_valid": "‚úì Code is valid!",
        "builder.saved.code_warnings": "Code has warnings:",
        "builder.saved.update_button": "Update",
        "builder.saved.update_success": "‚úì Updated!",
        "builder.saved.update_error": "Update error: {error}",
        "builder.saved.load_button": "Load to Editor",
        "builder.saved.load_success": "Strategy loaded to editor!",
        "builder.saved.load_error": "Load error: {error}",
        "builder.saved.delete_button": "Delete",
        "builder.saved.delete_success": "Strategy deleted!",
        "builder.saved.empty": "No saved strategies yet. Create one using the Define Strategy tab!",
        
        # Settings Page
        "settings.title": "Settings",
        "settings.subtitle": "Configure application settings and LLM integrations",
        
        # LLM Configuration
        "settings.llm.header": "LLM Configuration",
        "settings.llm.description": "Configure AI models for natural language strategy parsing. Supports OpenAI (GPT) and Anthropic (Claude).",
        "settings.llm.add_config": "‚ûï Add New LLM Configuration",
        "settings.llm.form_title": "LLM Provider Settings",
        "settings.llm.provider_label": "Provider",
        "settings.llm.provider_help": "Choose between OpenAI (GPT models) or Anthropic (Claude models)",
        "settings.llm.model_label": "Model",
        "settings.llm.model_help": "Select the specific model version to use",
        "settings.llm.api_key_label": "API Key",
        "settings.llm.api_key_help": "Enter your API key (will be stored securely and masked in the UI)",
        "settings.llm.api_key_required": "API Key is required",
        "settings.llm.save_button": "üíæ Save Configuration",
        "settings.llm.save_success": "‚úì LLM configuration saved and activated!",
        "settings.llm.current_config": "Active Configuration",
        "settings.llm.config_updated": "Last updated: {date}",
        "settings.llm.delete_button": "üóëÔ∏è Delete",
        "settings.llm.delete_success": "Configuration deleted successfully",
        "settings.llm.all_configs": "All Saved Configurations",
        "settings.llm.no_configs": "No LLM configurations saved yet. Add one above to enable AI-powered strategy parsing.",
        "settings.llm.created": "Created",
        "settings.llm.status": "Status",
        "settings.llm.active": "Active",
        "settings.llm.inactive": "Inactive",
        "settings.llm.activate_button": "‚úÖ Activate",
        "settings.llm.activate_success": "Configuration activated successfully",
        "settings.llm.test_header": "Test LLM Connection",
        "settings.llm.test_input_label": "Test Strategy Description",
        "settings.llm.test_button": "üß™ Test Connection",
        "settings.llm.test_spinner": "Testing LLM connection...",
        "settings.llm.test_success": "‚úì LLM connection successful!",
        "settings.llm.test_show_results": "View Test Results",
        "settings.llm.test_error": "Test failed: {error}",
        "settings.llm.test_no_config": "No active LLM configuration. Add one above to test.",
        
        # Strategy Builder LLM status
        "builder.define.llm_active": "LLM Active",
        "builder.define.llm_inactive": "‚ö†Ô∏è No LLM configured. Using rule-based parsing. Configure LLM in Settings page for better results.",
        
        "results.title": "Backtest Results",
        "results.subtitle": "Analyze backtest performance and metrics",
        "results.info.no_completed": "No completed backtests yet. Run a backtest first!",
        "results.section.select": "Select Backtest",
        "results.form.choose_backtest": "Choose backtest",
        "results.warning.no_metrics": "No metrics available for this backtest",
        "results.section.summary": "Performance Summary",
        "results.metric.total_return": "Total Return",
        "results.metric.sharpe": "Sharpe Ratio",
        "results.metric.max_dd": "Max Drawdown",
        "results.metric.excess_return": "Excess Return",
        "results.metric.cagr": "CAGR",
        "results.metric.sortino": "Sortino Ratio",
        "results.metric.calmar": "Calmar Ratio",
        "results.tabs.equity": "üìà Equity Curve",
        "results.tabs.metrics": "üìä Metrics",
        "results.tabs.trades": "üìù Trades",
        "results.tabs.benchmark": "üéØ Benchmark Comparison",
        "results.tabs.details": "üìã Details",
        "results.tabs.equity_header": "Equity Trend",
        "results.tabs.metrics_header": "Performance Metrics",
        "results.tabs.trades_header": "Executed Trades",
        "results.tabs.benchmark_header": "Benchmark Comparison",
        "results.chart.equity_trend": "Equity Trend",
        "results.chart.daily_returns": "Daily Gain/Loss",
        "results.caption.sessions": "Gain sessions: {gains} | Loss sessions: {losses}",
        "results.section.top_gains": "Top Gain Sessions",
        "results.section.top_losses": "Top Loss Sessions",
        "results.info.no_gain_sessions": "No gain sessions recorded",
        "results.info.no_loss_sessions": "No loss sessions recorded",
        "results.info.no_equity": "No equity curve data available for this backtest yet.",
        "results.table.metric": "Metric",
        "results.table.value": "Value",
        "results.text.benchmarks": "**Benchmarks:** {benchmarks}",
        "results.warning.no_benchmark_data": "Benchmark data not available. Download benchmark data in the Data page.",
        "results.info.no_benchmarks": "No benchmarks selected for this backtest",
        "results.benchmark.symbol": "Symbol",
        "results.benchmark.outperformance": "Strategy Outperformance",
        "results.section.configuration": "Backtest Configuration",
        "results.config.backtest_id": "**Backtest ID:** {value}",
        "results.config.strategy": "**Strategy:** {value}",
        "results.config.status": "**Status:** {value}",
        "results.config.created": "**Created:** {value}",
        "results.config.universe": "**Universe:** {value}",
        "results.config.start": "**Start Date:** {value}",
        "results.config.end": "**End Date:** {value}",
        "results.config.initial_cash": "**Initial Cash:** {value}",
        "results.section.strategy_definition": "Strategy Definition",
        "results.section.export": "Export Results",
        "results.button.export_json": "Export as JSON",
        "results.button.download_json": "Download JSON",
        "results.button.export_metrics": "Export Metrics as CSV",
        "results.button.download_csv": "Download CSV",
        "results.info.export_html": "HTML export coming soon",
        "results.gain_loss.date": "Date",
        "results.gain_loss.return": "Return (%)",
        "results.gain_loss.value": "Portfolio Value ($)",
        "results.gain_loss.pnl": "Cumulative PnL ($)",
        "results.trades.metric.trades": "Trade Events",
        "results.trades.metric.realized": "Realized P/L",
        "results.trades.metric.win_rate": "Win Rate",
        "results.trades.metric.avg_allocation": "Avg Allocation",
        "results.trades.caption.avg_hold": "Average holding period: {bars} bars",
        "results.trades.no_data": "No trades were executed for this backtest.",
        "results.trades.column.timestamp": "Date",
        "results.trades.column.symbol": "Symbol",
        "results.trades.column.action": "Side",
        "results.trades.column.size": "Size",
        "results.trades.column.price": "Price",
        "results.trades.column.value": "Value",
        "results.trades.column.commission": "Commission",
        "results.trades.column.pnl": "P/L",
        "results.trades.column.pnl_pct": "P/L %",
        "results.trades.column.alloc_pct": "Allocation %",
        "results.trades.column.holding": "Hold (bars)",
        "results.trades.column.reason": "Reason",
        "app.nav.home": "üè† Home",
        "app.nav.data": "üì¶ Data",
        "app.nav.builder": "üõ†Ô∏è Strategy Builder",
        "app.nav.backtest": "üöÄ Backtest",
    "app.nav.results": "üìä Results",
    "app.nav.settings": "‚öôÔ∏è Settings",
    },
    "zh": {
        "common.language_label": "ËØ≠Ë®Ä / Language",
        "common.start_date": "ÂºÄÂßãÊó•Êúü",
        "common.end_date": "ÁªìÊùüÊó•Êúü",
    "app.title": "üìà Me Trade",
        "app.subtitle": "Èù¢ÂêëÁæéËÇ°‰∏éÊúüÊùÉÁöÑËá™ÁÑ∂ËØ≠Ë®ÄÂõûÊµãÂπ≥Âè∞",
        "app.home.content": (
            "Ê¨¢ËøéÊù•Âà∞ **Me Trade**Ôºå‰∏Ä‰∏™ÈÄöËøáËá™ÁÑ∂ËØ≠Ë®ÄÂø´ÈÄüÊûÑÂª∫Âπ∂ÊµãËØï‰∫§ÊòìÁ≠ñÁï•ÁöÑËΩªÈáèÁ∫ßÂ∫îÁî®„ÄÇ\n\n"
            "### üöÄ Âø´ÈÄü‰∏äÊâã\n\n"
            "1. **Êï∞ÊçÆ** - ‰ªé Yahoo Finance ‰∏ãËΩΩËÇ°Á•®‰∏éÊúüÊùÉÊï∞ÊçÆ\n"
            "2. **Á≠ñÁï•ÊûÑÂª∫Âô®** - ‰ΩøÁî®Ëá™ÁÑ∂ËØ≠Ë®ÄÊàñÁªìÊûÑÂåñ JSON ÊèèËø∞Á≠ñÁï•\n"
            "3. **ÂõûÊµã** - Âú®ÂéÜÂè≤Êï∞ÊçÆ‰∏äËøêË°åÁ≠ñÁï•\n"
            "4. **ÁªìÊûú** - ÂàÜÊûêÁª©ÊïàÊåáÊ†áÂπ∂ÂØπÊØîÂü∫ÂáÜ\n\n"
            "### üìä ÂäüËÉΩ‰∫ÆÁÇπ\n\n"
            "- **Ëá™ÁÑ∂ËØ≠Ë®ÄÁ≠ñÁï•ÂÆö‰πâ** - Áõ¥Êé•Áî®Ëã±ÊñáÊàñ‰∏≠ÊñáÊèèËø∞Á≠ñÁï•\n"
            "- **Â§öÊï∞ÊçÆÊ∫êÊîØÊåÅ** - Âü∫‰∫é Yahoo Finance ÁöÑËÇ°Á•®‰∏éÊúüÊùÉÊï∞ÊçÆ\n"
            "- **ÂÖ®Èù¢ÂõûÊµãÂºïÊìé** - ‰ΩøÁî® Backtrader È©±Âä®\n"
            "- **Âü∫ÂáÜÂØπÊØî** - ÊîØÊåÅ‰∏é VOO„ÄÅSPY„ÄÅQQQ Á≠âÊåáÊï∞ÊØîËæÉ\n"
            "- **È£éÈô©ÊåáÊ†á** - Êèê‰æõÂ§èÊôÆ„ÄÅÁ¥¢ÊèêËØ∫„ÄÅÂç°Â∞îÁéõ‰ª•ÂèäÊúÄÂ§ßÂõûÊí§\n"
            "- **Êú¨Âú∞Â≠òÂÇ®** - SQLite ‰øùÂ≠òÊï∞ÊçÆ‰∏éÂõûÊµãÁªìÊûú\n\n"
            "### üéØ ÊîØÊåÅÁöÑÊ†áÁöÑÔºàÂàùÂßãÊé®ËçêÔºâ\n\n"
            "{symbols}\n\n"
            "### üìñ ‰ΩøÁî®ÊåáÂçó\n\n"
            "ËØ∑ÈÄöËøá‰æßËæπÊ†èÂØºËà™Ëá≥‰ª•‰∏ãÈ°µÈù¢Ôºö\n\n"
            "- **Êï∞ÊçÆ**Ôºö‰∏ãËΩΩ‰∏éÁÆ°ÁêÜÂ∏ÇÂú∫Êï∞ÊçÆ\n"
            "- **Á≠ñÁï•ÊûÑÂª∫Âô®**ÔºöÂàõÂª∫ÊàñÁºñËæë‰∫§ÊòìÁ≠ñÁï•  \n"
            "- **ÂõûÊµã**ÔºöËøêË°åÁ≠ñÁï•Âπ∂Êü•ÁúãÂü∫Á°ÄÁªìÊûú\n"
            "- **ÁªìÊûú**ÔºöÊ∑±ÂÖ•ÂàÜÊûêÁª©ÊïàÊåáÊ†á‰∏éÂõæË°®\n\n"
            "### ‚öôÔ∏è ÈÖçÁΩÆÂèÇÊï∞\n\n"
            "- **ÂàùÂßãËµÑÈáë**Ôºö${initial_cash:,.0f}\n"
            "- **‰Ω£Èáë**ÔºöÊØèËÇ° ${commission:.4f}\n"
            "- **ÊªëÁÇπ**Ôºö{slippage_bps} Âü∫ÁÇπ\n\n"
            "---\n\n"
            "**Âø´ÈÄüÂºÄÂßã**ÔºöÂÖàËøõÂÖ•‚ÄúÊï∞ÊçÆ‚ÄùÈ°µÈù¢‰∏ãËΩΩË°åÊÉÖÔºåÂÜçÊûÑÂª∫Âπ∂ËøêË°åÁ≠ñÁï•ÂêßÔºÅ"
        ),
    "app.sidebar.navigation_heading": "### üß≠ ÂØºËà™",
        "app.sidebar.database_info_heading": "### üìä Êï∞ÊçÆÂ∫ì‰ø°ÊÅØ",
        "app.sidebar.cached_symbols": "Â∑≤ÁºìÂ≠òÊ†áÁöÑÊï∞",
        "app.sidebar.saved_strategies": "Â∑≤‰øùÂ≠òÁ≠ñÁï•Êï∞",
        "app.sidebar.total_backtests": "Á¥ØËÆ°ÂõûÊµãÊ¨°Êï∞",
        "app.sidebar.about_heading": "### ‚ÑπÔ∏è ÂÖ≥‰∫é",
        "app.sidebar.about_content": (
            "**ÁâàÊú¨**Ôºö0.1.0ÔºàMVPÔºâ\n\n"
            "**ÊäÄÊúØÊ†à**Ôºö\n"
            "- StreamlitÔºàÁïåÈù¢Ôºâ\n"
            "- BacktraderÔºàÂõûÊµãÔºâ\n"
            "- yfinanceÔºàÊï∞ÊçÆÔºâ\n"
            "- SQLiteÔºàÂ≠òÂÇ®Ôºâ\n"
            "- PlotlyÔºàÂõæË°®Ôºâ\n\n"
            "**Ê∫êÁ†Å**Ôºö [GitHub](#)"
        ),
        "backtest.title": "ËøêË°åÂõûÊµã",
        "backtest.subtitle": "ÊâßË°åÁ≠ñÁï•Âπ∂ÂàÜÊûêÁªìÊûú",
        "backtest.warning.no_strategies": "ÂΩìÂâçÊ≤°ÊúâÂèØÁî®Á≠ñÁï•ÔºåËØ∑ÂÖàÂú®‚ÄúÁ≠ñÁï•ÊûÑÂª∫Âô®‚ÄùÈ°µÈù¢ÂàõÂª∫„ÄÇ",
        "backtest.section.select_strategy": "1. ÈÄâÊã©Á≠ñÁï•",
        "backtest.form.choose_strategy": "ÈÄâÊã©Á≠ñÁï•",
        "backtest.error.no_code": "Êú™ÊâæÂà∞ËØ•Á≠ñÁï•ÂØπÂ∫îÁöÑ‰ª£Á†ÅÔºÅ",
        "backtest.expander.strategy_details": "Á≠ñÁï•ËØ¶ÊÉÖ",
        "backtest.section.configure": "2. ÈÖçÁΩÆÂõûÊµã",
        "backtest.form.universe": "‰∫§ÊòìÊ†áÁöÑÔºàÂèØËæìÂÖ•Â§ö‰∏™‰ª£Á†ÅÔºâ",
        "backtest.warning.missing_data": "Áº∫Â∞ë‰ª•‰∏ãÊ†áÁöÑÁöÑÊï∞ÊçÆÔºö{symbols}",
        "backtest.info.download_data": "ËØ∑ÂÖàÂú®‚ÄúÊï∞ÊçÆ‚ÄùÈ°µÈù¢‰∏ãËΩΩÊâÄÈúÄË°åÊÉÖ„ÄÇ",
        "backtest.form.initial_cash": "ÂàùÂßãËµÑÈáëÔºàÁæéÂÖÉÔºâ",
        "backtest.form.commission": "ÊØèËÇ°‰Ω£ÈáëÔºàÁæéÂÖÉÔºâ",
        "backtest.form.slippage": "ÊªëÁÇπÔºàÂü∫ÁÇπÔºâ",
        "backtest.section.benchmarks": "3. ÈÄâÊã©Âü∫ÂáÜ",
        "backtest.form.compare_against": "ÈÄâÊã©ÂØπÊØîÂü∫ÂáÜ",
        "backtest.button.run": "üöÄ ËøêË°åÂõûÊµã",
        "backtest.spinner.running": "Ê≠£Âú®ËøêË°åÂõûÊµã‚Ä¶‚Ä¶ËØ∑Á®çÂÄô„ÄÇ",
        "backtest.success.completed": "‚úì ÂõûÊµãÂÆåÊàêÔºÅIDÔºö{bt_id}",
        "backtest.section.results_summary": "ÁªìÊûúÊ¶ÇËßà",
        "backtest.metric.starting_value": "Ëµ∑ÂßãÂ∏ÇÂÄº",
        "backtest.metric.ending_value": "ÁªìÊùüÂ∏ÇÂÄº",
        "backtest.metric.total_return": "ÊÄªÊî∂ÁõäÁéá",
        "backtest.metric.total_trades": "‰∫§ÊòìÊ¨°Êï∞",
        "backtest.info.view_results": "ËØ¶ÁªÜÊåáÊ†áÂèØÂú®‚ÄúÁªìÊûú‚ÄùÈ°µÈù¢Êü•Áúã„ÄÇ",
        "backtest.error.failed": "ÂõûÊµãÂ§±Ë¥•Ôºö{message}",
        "backtest.error.exception": "ÂõûÊµãÂá∫Áé∞ÈîôËØØÔºö{message}",
        "backtest.section.recent": "ËøëÊúüÂõûÊµã",
        "backtest.recent.item": "{status_icon} **{name}** - {bt_id} - Êî∂ÁõäÔºö{return_str} - {created}",
        "backtest.info.no_backtests": "Â∞öÊú™ËøêË°å‰ªª‰ΩïÂõûÊµã",
        "data.title": "Êï∞ÊçÆÁÆ°ÁêÜ",
        "data.subtitle": "‰∏ãËΩΩÂπ∂ÁÆ°ÁêÜËÇ°Á•®‰∏éÊúüÊùÉÊï∞ÊçÆ",
    "data.favorites.header": "Ëá™ÈÄâÂàóË°®",
    "data.favorites.help": "Ëøô‰∫õÊ†áÁöÑ‰ºöÂú®Êï∞ÊçÆÈ°µÁöÑÈÄâÊã©Âô®È°∂ÈÉ®ÊòæÁ§∫„ÄÇ",
    "data.favorites.list": "ÂΩìÂâçËá™ÈÄâÔºö{symbols}",
    "data.favorites.list_empty": "ÂΩìÂâçËá™ÈÄâÔºöÊöÇÊó†",
    "data.favorites.add_label": "Ê∑ªÂä†Ê†áÁöÑ",
    "data.favorites.add_placeholder": "‰æãÂ¶Ç SPY",
    "data.favorites.add_button": "Ê∑ªÂä†",
    "data.favorites.add_invalid": "ËØ∑ËæìÂÖ•Ë¶ÅÊ∑ªÂä†ÁöÑÊ†áÁöÑ‰ª£Á†Å„ÄÇ",
    "data.favorites.add_exists": "{symbol} Â∑≤Âú®Ëá™ÈÄâÂàóË°®‰∏≠„ÄÇ",
    "data.favorites.add_success": "Â∑≤Â∞Ü {symbol} Ê∑ªÂä†Âà∞Ëá™ÈÄâÂàóË°®„ÄÇ",
    "data.favorites.remove_label": "ÁßªÈô§Ê†áÁöÑ",
    "data.favorites.remove_button": "ÁßªÈô§",
    "data.favorites.remove_success": "Â∑≤‰ªéËá™ÈÄâÂàóË°®ÁßªÈô§ {symbol}„ÄÇ",
    "data.favorites.remove_empty": "ÂΩìÂâçÊ≤°ÊúâÂèØÁßªÈô§ÁöÑËá™ÈÄâÊ†áÁöÑ„ÄÇ",
        "data.tabs.stocks": "üìà ËÇ°Á•®",
        "data.tabs.options": "üìä ÊúüÊùÉ",
        "data.tabs.benchmarks": "üéØ Âü∫ÂáÜ",
        "data.tabs.indicators": "üìâ ÊåáÊ†áÊü•Áúã",
    "data.stocks.header": "Êó•Á∫øÊï∞ÊçÆ",
        "data.stocks.download_title": "Êõ¥Êñ∞Êó•Á∫øÊï∞ÊçÆÁºìÂ≠ò",
        "data.stocks.symbols_label": "ËÇ°Á•®‰ª£Á†ÅÔºàÈÄóÂè∑ÂàÜÈöîÔºâ",
        "data.stocks.symbols_help": "ËØ∑ËæìÂÖ•Ë¶ÅÊõ¥Êñ∞Êó•Á∫øÊï∞ÊçÆÁöÑ‰ª£Á†ÅÔºåÂ§ö‰∏™‰ª£Á†ÅÁî®ÈÄóÂè∑ÂàÜÈöî",
        "data.stocks.fixed_window_note": "Êó•Á∫ø‰∏ãËΩΩÁ™óÂè£Âõ∫ÂÆö‰∏∫ {start} Ëá≥ {end}„ÄÇ",
        "data.stocks.download_full_button": "ÈáçÊñ∞‰∏ãËΩΩ 2019‚ÜíÁé∞Âú® ÁöÑÂÖ®ÈÉ®Êó•Á∫ø",
        "data.stocks.download_latest_button": "‰∏ãËΩΩÊúÄÊñ∞Êó•Á∫øÊï∞ÊçÆ",
        "data.stocks.spinner": "Ê≠£Âú®Ëé∑ÂèñÊó•Á∫øÊï∞ÊçÆ‚Ä¶‚Ä¶",
        "data.stocks.download_success": "‚úì Â∑≤‰∏∫ {symbol_count} ‰∏™Ê†áÁöÑ‰∏ãËΩΩ {rows} Ë°åÊó•Á∫øÊï∞ÊçÆ",
        "data.stocks.download_latest_up_to_date": "ÂÖ®ÈÉ®Ê†áÁöÑÂ∑≤ÊòØÊúÄÊñ∞Êó•Á∫øÊï∞ÊçÆ„ÄÇ",
        "data.stocks.download_latest_up_to_date_with_date": "ÊâÄÊúâÊ†áÁöÑÁöÑÊó•Á∫øÂ∑≤Ë¶ÜÁõñËá≥ {date}„ÄÇ",
        "data.stocks.download_latest_skipped": "‰ª•‰∏ã {count} ‰∏™Ê†áÁöÑÊ≤°ÊúâÊõ¥Êñ∞Ë¢´Ë∑≥ËøáÔºö{symbols}",
        "data.stocks.no_symbols": "ËØ∑ËæìÂÖ•Ëá≥Â∞ë‰∏Ä‰∏™ËÇ°Á•®/ÊåáÊï∞‰ª£Á†Å‰ª•Êõ¥Êñ∞ÁºìÂ≠ò„ÄÇ",
        "data.stocks.last_cached_info": "ÊúÄÊñ∞ÁºìÂ≠òÊó•ÊúüÔºö{date}ÔºàË¶ÜÁõñ {total} ‰∏™Ê†áÁöÑ‰∏≠ÁöÑ {count} ‰∏™Ôºâ„ÄÇ",
        "data.stocks.last_cached_missing": "Ëøô‰∫õÊ†áÁöÑÂ∞öÊú™ÁºìÂ≠ò‰ªª‰ΩïÊï∞ÊçÆ„ÄÇ",
        "data.common.download_failed": "ÈÉ®ÂàÜ‰∏ãËΩΩÂ§±Ë¥•Ôºö",
        "data.common.success_item": "- {symbol}Ôºö{rows} Ë°å",
        "data.common.error_item": "- {symbol}Ôºö{error}",
        "data.stocks.cached_title": "Êó•Á∫øÁºìÂ≠òÊ¶ÇËßà",
        "data.stocks.cached_none": "ÊöÇÊó†ÁºìÂ≠òÊï∞ÊçÆ",
        "data.stocks.cached_page_size": "ÊØèÈ°µÊï∞Èáè",
        "data.stocks.cached_page": "È°µÁ†Å",
        "data.stocks.cached_stats": "Á¨¨ {page} / {pages} È°µÔºåÂÖ± {total} ‰∏™Ê†áÁöÑ„ÄÇ",
        "data.stocks.cached_selector_label": "Ë∑≥ËΩ¨Âà∞Ê†áÁöÑ",
        "data.stocks.cached_col_symbol": "Ê†áÁöÑ",
        "data.stocks.cached_col_rows": "Ë°åÊï∞",
        "data.stocks.cached_col_start": "Ëµ∑ÂßãÊó•Êúü",
        "data.stocks.cached_col_end": "ÊúÄÊñ∞Êó•Êúü",
        "data.stocks.viewer_title": "Êü•ÁúãÊó•Á∫øÊòéÁªÜ",
        "data.stocks.viewer_select_label": "ÈÄâÊã©Ê†áÁöÑ",
        "data.stocks.viewer_page_size": "ÊØèÈ°µË°åÊï∞",
        "data.stocks.viewer_page": "È°µÁ†Å",
        "data.stocks.viewer_empty": "Â∞öÊó†ÁºìÂ≠òÊï∞ÊçÆ„ÄÇ",
        "data.stocks.viewer_no_rows": "ËØ•Ê†áÁöÑÂ∞öÊó†Êó•Á∫øÊï∞ÊçÆ„ÄÇ",
        "data.stocks.viewer_stats": "Á¨¨ {page} / {pages} È°µÔºåÂÖ± {total} Ë°å„ÄÇ",
        "data.stocks.delete_symbol_section_title": "Âà†Èô§ {symbol} ÁöÑÂÖ®ÈÉ®Êï∞ÊçÆ",
        "data.stocks.delete_symbol_confirm": "Á°ÆËÆ§Âà†Èô§ {symbol} ÁöÑÂÖ®ÈÉ®Êï∞ÊçÆ",
        "data.stocks.delete_symbol_button": "Âà†Èô§ËØ•Ê†áÁöÑ",
        "data.stocks.delete_symbol_success": "Â∑≤Âà†Èô§ {symbol} ÁöÑ {equity_rows} Ë°åË°åÊÉÖÊï∞ÊçÆÂíå {indicator_rows} Ë°åÊåáÊ†áÊï∞ÊçÆ„ÄÇ",
        "data.stocks.delete_symbol_failure": "Âà†Èô§ {symbol} Â§±Ë¥•Ôºö{error}",
        "data.stocks.delete_all_title": "Ê∏ÖÁ©∫ÂÖ®ÈÉ®Ë°åÊÉÖÁºìÂ≠ò",
        "data.stocks.delete_all_warning": "ËøôÂ∞ÜÂà†Èô§ÊâÄÊúâÂ∑≤Â≠ò‰ª∑Ê†º‰∏éÊåáÊ†áÔºå‰∏îÊó†Ê≥ïÊí§ÈîÄ„ÄÇ",
        "data.stocks.delete_all_confirm": "Á°ÆËÆ§Ê∏ÖÁ©∫ÂÖ®ÈÉ®Êï∞ÊçÆ",
        "data.stocks.delete_all_button": "Âà†Èô§ÂÖ®ÈÉ®Ë°åÊÉÖÊï∞ÊçÆ",
        "data.stocks.delete_all_success": "Â∑≤Âà†Èô§ {equity_rows} Ë°åË°åÊÉÖÊï∞ÊçÆ‰∏é {indicator_rows} Ë°åÊåáÊ†áÊï∞ÊçÆ„ÄÇ",
        "data.stocks.bulk_title": "ÊâπÈáè‰∏ãËΩΩÊ†áÊôÆ500ÁÉ≠Èó®ÁªÑÂêà",
        "data.stocks.bulk_description": (
            "Ëá™ 2019-01-01 Ëµ∑‰∏ãËΩΩ 100 Âè™ÊúÄÂèóÂÖ≥Ê≥®ÁöÑÊ†áÊôÆ500ÊàêÂàÜËÇ°Ôºå‰ª•ÂèäÊ†∏ÂøÉ ETFÔºàVOO„ÄÅQQQ„ÄÅSPY„ÄÅARK Á≥ªÂàó„ÄÅVTI„ÄÅVT„ÄÅIWM„ÄÅEFA„ÄÅEEM„ÄÅDIAÔºâ"
            "‰∏é‰∏ªË¶ÅÂ∏ÇÂú∫ÊåáÊï∞ÔºàÊ†áÊôÆ500„ÄÅÁ∫≥Êåá100„ÄÅÈÅìÁêºÊñØ„ÄÅÁΩóÁ¥†2000„ÄÅVIXÔºâ„ÄÇ"
        ),
        "data.stocks.bulk_button": "‰∏ãËΩΩÊ†áÊôÆÁÉ≠Èó®ËÇ° + ETF",
        "data.stocks.bulk_spinner": "Ê≠£Âú®‰∏ãËΩΩÊ†áÊôÆÁÉ≠Èó®ÁªÑÂêà‚Ä¶‚Ä¶",
        "data.stocks.bulk_success": "‚úì Â∑≤‰∏∫ {total} ‰∏™Ê†áÁöÑ‰∏≠ÁöÑ {count} ‰∏™‰∏ãËΩΩÊàêÂäüÔºåÂÖ±ÊèíÂÖ• {rows} Ë°åÊï∞ÊçÆ„ÄÇ",
        "data.stocks.bulk_failed_summary": "‰∏ãËΩΩÂ§±Ë¥•ÁöÑÊ†áÁöÑÔºà{count}ÔºâÔºö",
        "data.stocks.bulk_error": "‰∏ãËΩΩÂ§±Ë¥•Ôºö{error}",
        "data.stocks.bulk_error_lxml": "‰∏ãËΩΩÂ§±Ë¥•ÔºöÁº∫Â∞ë‰æùËµñ lxmlÔºåËØ∑ÊâßË°å `pip install lxml` ÂêéÈáçËØï„ÄÇ",
        "data.stocks.bulk_error_ssl": "‰∏ãËΩΩÂ§±Ë¥•ÔºöSSL ËØÅ‰π¶Ê†°È™åÂ§±Ë¥•ÔºåËØ∑ÂÆâË£ÖÁ≥ªÁªüÊ†πËØÅ‰π¶ÊàñÊõ¥Êñ∞ Python ËØÅ‰π¶ÂêéÈáçËØï„ÄÇ",
        "data.stocks.bulk_symbol_total": "Ê†áÁöÑÊï∞ÈáèÔºö{total} ‰∏™„ÄÇ",
        "data.stocks.bulk_preview": "Ââç 5 ‰∏™Ê†áÁöÑÈ¢ÑËßàÔºö{preview}",
        "data.upload.title": "‰∏ä‰º†Ëá™ÂÆö‰πâÊï∞ÊçÆ",
        "data.upload.file_label": "‰∏ä‰º† CSV Êñá‰ª∂",
        "data.upload.help": "CSV ÈúÄÂåÖÂê´ÂàóÔºödate„ÄÅopen„ÄÅhigh„ÄÅlow„ÄÅclose„ÄÅvolume",
        "data.upload.symbol_label": "‰∏ä‰º†Êï∞ÊçÆÂØπÂ∫îÁöÑ‰ª£Á†Å",
        "data.upload.process_button": "Â§ÑÁêÜ‰∏ä‰º†",
        "data.upload.success": "‚úì Â∑≤‰∏∫ {symbol} ‰∏ä‰º† {rows} Ë°åÊï∞ÊçÆ",
        "data.upload.error": "‰∏ä‰º†Â§±Ë¥•Ôºö{error}",
        "data.options.header": "ÊúüÊùÉÈìæÊï∞ÊçÆ",
    "data.options.import_hint": "ÊèêÁ§∫ÔºöÂ∞Ü Dolt ÂØºÂá∫ÁöÑ CSV ÊîæÂÖ• data/option_chain/ ‰∏≠ÔºåÁÑ∂Âêé‰ΩøÁî®‰∏äÊñπÂØºÂÖ•Â∑•ÂÖ∑Â°´ÂÖÖÊï∞ÊçÆ„ÄÇ",
        "data.options.view_title": "Êü•ÁúãÂ∑≤ÁºìÂ≠òÊúüÊùÉ",
        "data.options.select_symbol": "ÈÄâÊã©‰ª£Á†Å",
        "data.options.available_expirations": "**ÂèØÁî®Âà∞ÊúüÊó•Ôºö** {count}",
        "data.options.select_expiration": "Âà∞ÊúüÊó•",
    "data.options.import_title": "ÂØºÂÖ•ÂéÜÂè≤ CSV Êï∞ÊçÆ",
    "data.options.import_help": "Â∞Ü {path} ‰∏≠ÁöÑ Dolt ÂØºÂá∫ CSV Êñá‰ª∂ÂØºÂÖ•Êú¨Âú∞ SQLite ÁºìÂ≠ò„ÄÇ",
    "data.options.import_button": "ÂØºÂÖ•ÊúüÊùÉ CSV Êñá‰ª∂",
    "data.options.import_spinner": "Ê≠£Âú®ÂØºÂÖ• CSV Êï∞ÊçÆ‚Ä¶‚Ä¶",
    "data.options.import_no_files": "option_chain Êñá‰ª∂Â§πÂÜÖÊú™ÊâæÂà∞ CSV Êñá‰ª∂„ÄÇ",
    "data.options.import_success": "‚úì Â∑≤‰ªé {files} ‰∏™Êñá‰ª∂ÂØºÂÖ• {rows} Êù°ÊúüÊùÉËÆ∞ÂΩï„ÄÇ",
    "data.options.import_error_summary": "ÂØºÂÖ•ÂÆåÊàêÔºå‰ΩÜÊúâ {count} ‰∏™Êñá‰ª∂Âá∫ÈîôÔºö",
    "data.options.import_error_item": "- {file}Ôºö{error}",
    "data.options.no_cached_data": "ÂΩìÂâçÊ≤°ÊúâÊúüÊùÉÁºìÂ≠òÔºåËØ∑ÂÖà‰∏ãËΩΩÊàñÂØºÂÖ•Êï∞ÊçÆ„ÄÇ",
    "data.options.no_trade_dates": "ËØ•Ê†áÁöÑÊ≤°ÊúâÂèØÁî®ÁöÑ‰∫§ÊòìÊó•„ÄÇ",
    "data.options.select_trade_date": "‰∫§ÊòìÊó•",
    "data.options.trade_date_view": "ÈÄâÊã©‰∫§ÊòìÊó•",
    "data.options.trade_date_prev": "‰∏ä‰∏ÄÊó•",
    "data.options.trade_date_next": "‰∏ã‰∏ÄÊó•",
    "data.options.trade_date_latest": "ÊúÄÊñ∞",
    "data.options.expiration_label": "Âà∞ÊúüÊó•",
    "data.options.expiration_prev": "Ââç‰∏Ä‰∏™",
    "data.options.expiration_next": "Âêé‰∏Ä‰∏™",
    "data.options.expiration_latest": "ÊúÄËøë",
    "data.options.no_expirations": "ÊâÄÈÄâ‰∫§ÊòìÊó•Ê≤°ÊúâÂèØÁî®ÁöÑÂà∞ÊúüÊó•„ÄÇ",
    "data.options.table_page_size": "ÊØèÈ°µË°åÊï∞",
    "data.options.table_page": "È°µÁ†Å",
    "data.options.table_stats": "Á¨¨ {page} / {pages} È°µÔºåÂÖ± {total} ‰∏™Ë°åÊùÉ‰ª∑",
    "data.options.col.call_bid": "ÁúãÊ∂®‰π∞‰ª∑",
    "data.options.col.call_ask": "ÁúãÊ∂®Âçñ‰ª∑",
    "data.options.col.strike": "Ë°åÊùÉ‰ª∑",
    "data.options.col.put_bid": "ÁúãË∑å‰π∞‰ª∑",
    "data.options.col.put_ask": "ÁúãË∑åÂçñ‰ª∑",
    "data.options.greeks_none": "ÂΩìÂâçË°åÊ≤°ÊúâÂèØÁî®ÁöÑÁúãÊ∂®ÊàñÁúãË∑åÊï∞ÊçÆ„ÄÇ",
    "data.options.greeks_side_label": "Êü•ÁúãÂêàÁ∫¶",
    "data.options.side.call": "ÁúãÊ∂®",
    "data.options.side.put": "ÁúãË∑å",
    "data.options.metric.bid": "‰π∞‰ª∑",
    "data.options.metric.ask": "Âçñ‰ª∑",
        "data.options.row_label.underlying": "Ê†áÁöÑÊî∂Áõò‰ª∑",
    "data.options.metric.last": "ÊúÄÊñ∞‰ª∑",
    "data.options.metric.mid": "‰∏≠Èó¥‰ª∑",
    "data.options.metric.volume": "Êàê‰∫§Èáè",
    "data.options.metric.open_interest": "Êú™Âπ≥‰ªìÈáè",
    "data.options.metric.implied_vol": "ÈöêÂê´Ê≥¢Âä®Áéá",
    "data.options.metric.delta": "Delta",
    "data.options.metric.gamma": "Gamma",
    "data.options.metric.theta": "Theta",
    "data.options.metric.vega": "Vega",
    "data.options.metric.rho": "Rho",
    "data.options.metric.price": "‰ª∑Ê†º",
    "data.options.metric.generic": "Êï∞ÂÄº",
    "data.options.greeks_title": "{side}ÂêàÁ∫¶ÔºöË°åÊùÉ‰ª∑ {strike}",
    "data.options.timeline_no_data": "ÊöÇÊó†ËØ•ÂêàÁ∫¶ÁöÑÂéÜÂè≤ËÆ∞ÂΩï„ÄÇ",
    "data.options.timeline_trade_title": "Êåâ‰∫§ÊòìÊó• ‚Ä¢ {side} ‚Ä¢ Ë°åÊùÉ‰ª∑ {strike} ‚Ä¢ Âà∞Êúü {expiration}",
    "data.options.timeline_trade_greeks": "Greeks Êó•Á∫ø ‚Ä¢ {side} ‚Ä¢ Ë°åÊùÉ‰ª∑ {strike} ‚Ä¢ Âà∞Êúü {expiration}",
    "data.options.timeline_axis_trade_date": "‰∫§ÊòìÊó•",
    "data.options.timeline_axis_expiration": "Âà∞ÊúüÊó•",
    "data.options.timeline_expiration_no_data": "ÊâÄÈÄâ‰∫§ÊòìÊó•Ê≤°ÊúâÂÖ∂‰ªñÂà∞ÊúüÊó•ËÆ∞ÂΩï„ÄÇ",
    "data.options.timeline_expiration_title": "ÊåâÂà∞ÊúüÊó• ‚Ä¢ {side} ‚Ä¢ Ë°åÊùÉ‰ª∑ {strike} ‚Ä¢ ‰∫§ÊòìÊó• {trade_date}",
    "data.options.timeline_expiration_greeks": "Greeks Âà∞ÊúüÊõ≤Á∫ø ‚Ä¢ {side} ‚Ä¢ Ë°åÊùÉ‰ª∑ {strike} ‚Ä¢ ‰∫§ÊòìÊó• {trade_date}",
        "data.options.no_data": "ËØ•Ê†áÁöÑÊöÇÊó†ÊúüÊùÉÈìæÊï∞ÊçÆ",
    "data.options.delete_title": "Âà†Èô§ÊúüÊùÉÊï∞ÊçÆ",
    "data.options.delete_symbol_label": "ÈÄâÊã©Ë¶ÅÂà†Èô§ÁöÑ‰ª£Á†Å",
    "data.options.delete_symbol_confirm": "Âà†Èô§ {symbol} ÁöÑÂÖ®ÈÉ®ÊúüÊùÉÊï∞ÊçÆ",
    "data.options.delete_symbol_button": "Âà†Èô§ËØ•‰ª£Á†Å",
    "data.options.delete_symbol_success": "‚úì Â∑≤Âà†Èô§ {symbol} ÁöÑ {rows} Êù°ÊúüÊùÉËÆ∞ÂΩï„ÄÇ",
    "data.options.delete_all_title": "Ê∏ÖÁ©∫ÂÖ®ÈÉ®ÊúüÊùÉÁºìÂ≠ò",
    "data.options.delete_all_confirm": "ÊàëÁ°ÆËÆ§Âà†Èô§ÊâÄÊúâÁºìÂ≠òÁöÑÊúüÊùÉÊï∞ÊçÆ",
    "data.options.delete_all_button": "Âà†Èô§ÂÖ®ÈÉ®ÊúüÊùÉÊï∞ÊçÆ",
    "data.options.delete_all_success": "‚úì Â∑≤Âà†Èô§ {rows} Êù°ÊúüÊùÉËÆ∞ÂΩï„ÄÇ",
        "data.benchmarks.header": "Âü∫ÂáÜÊï∞ÊçÆ",
        "data.benchmarks.description": "‰∏ãËΩΩÂü∫ÂáÜÊåáÊï∞Áî®‰∫éÂØπÊØî",
        "data.benchmarks.list": "**Âü∫ÂáÜÔºö** {symbols}",
        "data.benchmarks.start": "Âü∫ÂáÜÂºÄÂßãÊó•Êúü",
        "data.benchmarks.end": "Âü∫ÂáÜÁªìÊùüÊó•Êúü",
        "data.benchmarks.download_button": "‰∏ãËΩΩÂü∫ÂáÜÊï∞ÊçÆ",
        "data.benchmarks.spinner": "Ê≠£Âú®‰∏ãËΩΩÂü∫ÂáÜÊï∞ÊçÆ‚Ä¶‚Ä¶",
        "data.benchmarks.success": "‚úì Âü∫ÂáÜÊï∞ÊçÆ‰∏ãËΩΩÂÆåÊàê",
        "data.benchmarks.success_item": "- {symbol}Ôºö{rows} Ë°å",
        "data.benchmarks.failed": "ÈÉ®ÂàÜ‰∏ãËΩΩÂ§±Ë¥•Ôºö",
        "data.benchmarks.cached_title": "Â∑≤ÁºìÂ≠òÂü∫ÂáÜÊï∞ÊçÆ",
        "data.indicators.header": "ÊåáÊ†áÂèØËßÜÂåñ",
        "data.indicators.no_data": "ÊöÇÊó†ËÇ°Á•®Êï∞ÊçÆÔºåËØ∑ÂÖàÂú®‚ÄúËÇ°Á•®‚ÄùÊ†áÁ≠æ‰∏ãËΩΩË°åÊÉÖ„ÄÇ",
        "data.indicators.select_symbol": "ËÇ°Á•®‰ª£Á†Å",
        "data.indicators.date_range": "Êó•ÊúüËåÉÂõ¥",
    "data.indicators.date_preset.label": "Âø´Êç∑Âå∫Èó¥",
    "data.indicators.date_preset.custom": "Ëá™ÂÆö‰πâÂå∫Èó¥",
    "data.indicators.date_preset.last_week": "ÊúÄËøë‰∏ÄÂë®",
    "data.indicators.date_preset.last_month": "ÊúÄËøë‰∏ÄÊúà",
    "data.indicators.date_preset.last_three_months": "ÊúÄËøë‰∏â‰∏™Êúà",
    "data.indicators.date_preset.last_year": "ÊúÄËøë‰∏ÄÂπ¥",
    "data.indicators.date_preset.last_two_years": "ÊúÄËøë‰∏§Âπ¥",
    "data.indicators.date_preset.last_three_years": "ÊúÄËøë‰∏âÂπ¥",
    "data.indicators.date_preset.last_five_years": "ÊúÄËøë‰∫îÂπ¥",
        "data.indicators.from": "Ëµ∑ÂßãÊó•Êúü",
        "data.indicators.to": "ÁªìÊùüÊó•Êúü",
        "data.indicators.section_title": "ÊåáÊ†áÂè†Âä†",
        "data.indicators.checkbox.sma20": "SMA 20",
        "data.indicators.checkbox.sma50": "SMA 50",
        "data.indicators.checkbox.sma200": "SMA 200",
        "data.indicators.checkbox.ema12": "EMA 12",
        "data.indicators.checkbox.ema26": "EMA 26",
        "data.indicators.checkbox.rsi": "RSI",
        "data.indicators.checkbox.macd": "MACD",
        "data.indicators.checkbox.bbands": "Â∏ÉÊûóÂ∏¶",
        "data.indicators.stored_available": "üìä Â∑≤ÊúâÂ≠òÂÇ®ÁöÑÊåáÊ†áÊï∞ÊçÆ",
        "data.indicators.stored_missing": "‚ö†Ô∏è ÊöÇÊó†Â≠òÂÇ®ÁöÑÊåáÊ†áÔºåÂ∞ÜÂú®Êü•ÁúãÊó∂Âç≥Êó∂ËÆ°ÁÆó„ÄÇ",
        "data.indicators.refresh_button": "Âà∑Êñ∞ÊåáÊ†áÁºìÂ≠ò",
        "data.indicators.refresh_help": "Âü∫‰∫éÂ∑≤ÁºìÂ≠òÁöÑË°åÊÉÖÈáçÊñ∞ÁîüÊàêÊåáÊ†á",
        "data.indicators.refresh_spinner": "Ê≠£Âú®Âà∑Êñ∞ÊåáÊ†áÁºìÂ≠ò‚Ä¶‚Ä¶",
        "data.indicators.refresh_success": "‚úì ÊåáÊ†áÁºìÂ≠òÂ∑≤Êõ¥Êñ∞",
        "data.indicators.refresh_no_source": "ÊâÄÈÄâÂå∫Èó¥ÂÜÖÁº∫Â∞ë {symbol} ÁöÑÂéüÂßãË°åÊÉÖÔºåËØ∑ÂÖà‰∏ãËΩΩÊàñÂà∑Êñ∞Ë°åÊÉÖÊï∞ÊçÆ„ÄÇ",
        "data.indicators.loading_spinner": "Ê≠£Âú®Âä†ËΩΩÊåáÊ†á‚Ä¶‚Ä¶",
        "data.indicators.load_no_data": "Âú®ÊâÄÈÄâÊó•ÊúüËåÉÂõ¥ÂÜÖÔºå{symbol} ÊöÇÊó†Êï∞ÊçÆ",
    "data.indicators.chart_title": "{symbol} ¬∑ ‰ª∑Ê†º‰∏éÊåáÊ†áÁúãÊùø",
        "data.indicators.subplot.price": "‰ª∑Ê†º",
        "data.indicators.subplot.rsi": "RSI",
        "data.indicators.subplot.macd": "MACD",
        "data.indicators.legend.close": "Êî∂Áõò‰ª∑",
    "data.indicators.legend.candles": "KÁ∫ø",
        "data.indicators.legend.ema12": "EMA 12",
        "data.indicators.legend.bb_upper": "Â∏ÉÊûóÂ∏¶‰∏äËΩ®",
        "data.indicators.legend.bb_middle": "Â∏ÉÊûóÂ∏¶‰∏≠ËΩ®",
        "data.indicators.legend.bb_lower": "Â∏ÉÊûóÂ∏¶‰∏ãËΩ®",
        "data.indicators.legend.macd_signal": "‰ø°Âè∑Á∫ø",
        "data.indicators.legend.macd_histogram": "Êü±Áä∂Âõæ",
        "data.indicators.xaxis.date": "Êó•Êúü",
        "data.indicators.yaxis.price": "‰ª∑Ê†ºÔºàÁæéÂÖÉÔºâ",
        "data.indicators.table_title": "ÊåáÊ†áÊòéÁªÜ",
        "data.indicators.table_page_size": "ÊØèÈ°µË°åÊï∞",
        "data.indicators.table_page": "È°µÁ†Å",
        "data.indicators.table_stats": "Á¨¨ {page} / {pages} È°µÔºåÂÖ± {total} Ë°å",
        "data.indicators.download_button": "‰∏ãËΩΩÂÖ®ÈáèÊï∞ÊçÆ",
        "builder.title": "Á≠ñÁï•ÊûÑÂª∫Âô®",
        "builder.subtitle": "ÈÄöËøáËá™ÁÑ∂ËØ≠Ë®ÄÊàñÁªìÊûÑÂåñÂÆö‰πâÂàõÂª∫‰∫§ÊòìÁ≠ñÁï•",
        "builder.tabs.define": "üìù ÂÆö‰πâÁ≠ñÁï•",
        "builder.tabs.saved": "üíæ Â∑≤‰øùÂ≠òÁ≠ñÁï•",
        
        # Define Strategy Tab
        "builder.define.header": "ÂÆö‰πâ‰∫§ÊòìÁ≠ñÁï•",
        "builder.define.description": "‰ΩøÁî®Ëã±ÊñáÊàñ‰∏≠ÊñáÊèèËø∞‰Ω†ÁöÑ‰∫§ÊòìÁ≠ñÁï•ÔºåÁ≥ªÁªüÂ∞ÜËá™Âä®ËΩ¨Êç¢‰∏∫‰∏âÁßçÊ†ºÂºè",
        "builder.define.sample": (
            "ÂΩì 50 Êó•ÂùáÁ∫ø‰∏äÁ©ø 200 Êó•ÂùáÁ∫ø‰∏î RSI ‰Ωé‰∫é 70 Êó∂‰π∞ÂÖ• AAPL„ÄÇ\n"
            "ËÆæÁΩÆ 8% Ë∑üË∏™Ê≠¢ÊçüÊàñ 15% Ê≠¢Áõà„ÄÇ\n"
            "ÊµãËØïÂå∫Èó¥Ôºö2019-01-01 Ëá≥ 2024-12-31„ÄÇ"
        ),
        "builder.define.nl_input_label": "Á≠ñÁï•ÊèèËø∞",
        "builder.define.override_label": "Ë¶ÜÁõñÈªòËÆ§Ê†áÁöÑÔºàÂèØÈÄâÔºâ",
        "builder.define.override_placeholder": "AAPL, MSFT, GOOGL",
        "builder.define.parse_button": "Ëß£ÊûêÁ≠ñÁï•",
        "builder.define.spinner": "Ê≠£Âú®‰ΩøÁî® LLM Ëß£ÊûêÁ≠ñÁï•‚Ä¶‚Ä¶",
        "builder.define.success": "‚úì Á≠ñÁï•Â∑≤ÊàêÂäüËß£Êûê‰∏∫‰∏âÁßçÊ†ºÂºèÔºÅ",
        
        # Three formats section
        "builder.define.formats_header": "Á≠ñÁï•Ê†ºÂºèÔºàÂùáÂèØÁºñËæëÔºâ",
        "builder.define.format_human": "üìñ ‰∫∫Á±ªÂèØËØª",
        "builder.define.format_json": "‚öôÔ∏è JSON ÂÆö‰πâ",
        "builder.define.format_code": "üíª Backtrader ‰ª£Á†Å",
        
        # Human Readable
        "builder.define.human_description": "Ê∏ÖÊô∞„ÄÅÁªìÊûÑÂåñÁöÑÁ≠ñÁï•ÊèèËø∞",
        "builder.define.human_label": "‰∫∫Á±ªÂèØËØªÁ≠ñÁï•",
        "builder.define.update_human": "Êõ¥Êñ∞‰∫∫Á±ªÂèØËØªÊèèËø∞",
        
        # JSON Definition
        "builder.define.json_description": "ÁªìÊûÑÂåñ JSON Á≠ñÁï•ÂÆö‰πâÔºàÂèØÁºñËæëÔºâ",
        "builder.define.json_label": "Á≠ñÁï• JSON",
        "builder.define.validate_json": "Ê†°È™å JSON",
        "builder.define.validate_success": "‚úì Á≠ñÁï• JSON ÊúâÊïàÔºÅ",
        "builder.define.validate_error": "Ê†°È™åÈîôËØØÔºö{error}",
        "builder.define.compile_json": "ÁºñËØë‰∏∫‰ª£Á†Å",
        "builder.define.compile_success": "‚úì ‰ª£Á†ÅÁºñËØëÂπ∂ÈÄöËøáÊ†°È™åÔºÅ",
        "builder.define.compile_warning": "‰ª£Á†ÅÂ∑≤ÁîüÊàêÔºå‰ΩÜÂ≠òÂú®‰ª•‰∏ãÊ†°È™åË≠¶ÂëäÔºö",
        "builder.define.compile_error": "ÁºñËØëÈîôËØØÔºö{error}",
        
        # Backtrader Code
        "builder.define.code_description": "ÂÆåÊï¥ÁöÑ Backtrader Á≠ñÁï•Á±ªÔºàÂèØÁºñËæëÔºâ",
        "builder.define.code_label": "Backtrader Python ‰ª£Á†Å",
        "builder.define.validate_code": "Ê†°È™å‰ª£Á†Å",
        "builder.define.code_valid": "‚úì ‰ª£Á†ÅÊúâÊïàÔºÅ",
        "builder.define.code_warnings": "‰ª£Á†ÅÂ≠òÂú®Ê†°È™åË≠¶ÂëäÔºö",
        "builder.define.update_code": "Êõ¥Êñ∞‰ª£Á†Å",
        
        # Save section
        "builder.define.save_header": "‰øùÂ≠òÁ≠ñÁï•",
        "builder.define.strategy_name": "Á≠ñÁï•ÂêçÁß∞",
        "builder.define.save_button": "üíæ ‰øùÂ≠òÁ≠ñÁï•",
        "builder.define.save_success": "‚úì Á≠ñÁï•Â∑≤‰øùÂ≠òÔºÅIDÔºö{strategy_id}",
        "builder.define.save_error_no_data": "ËØ∑ÂÖàËß£ÊûêÊàñÂÆö‰πâ‰∏Ä‰∏™Á≠ñÁï•",
        "builder.define.update_success": "‚úì Êõ¥Êñ∞ÊàêÂäüÔºÅ",
        
        # Saved Strategies Tab
        "builder.saved.header": "Â∑≤‰øùÂ≠òÁ≠ñÁï•",
        "builder.saved.id": "**IDÔºö** {value}",
        "builder.saved.created": "**ÂàõÂª∫Êó∂Èó¥Ôºö** {value}",
        "builder.saved.format_human": "üìñ ‰∫∫Á±ªÂèØËØª",
        "builder.saved.format_json": "‚öôÔ∏è JSON",
        "builder.saved.format_code": "üíª ‰ª£Á†Å",
        "builder.saved.human_label": "‰∫∫Á±ªÂèØËØªÊèèËø∞",
        "builder.saved.json_label": "JSON ÂÆö‰πâ",
        "builder.saved.code_label": "Backtrader ‰ª£Á†Å",
        "builder.saved.validate_button": "Ê†°È™å",
        "builder.saved.validate_success": "‚úì ÊúâÊïàÔºÅ",
        "builder.saved.validate_error": "ÈîôËØØÔºö{error}",
        "builder.saved.code_valid": "‚úì ‰ª£Á†ÅÊúâÊïàÔºÅ",
        "builder.saved.code_warnings": "‰ª£Á†ÅÂ≠òÂú®Ë≠¶ÂëäÔºö",
        "builder.saved.update_button": "Êõ¥Êñ∞",
        "builder.saved.update_success": "‚úì Â∑≤Êõ¥Êñ∞ÔºÅ",
        "builder.saved.update_error": "Êõ¥Êñ∞ÈîôËØØÔºö{error}",
        "builder.saved.load_button": "Âä†ËΩΩÂà∞ÁºñËæëÂô®",
        "builder.saved.load_success": "Á≠ñÁï•Â∑≤Âä†ËΩΩÂà∞ÁºñËæëÂô®ÔºÅ",
        "builder.saved.load_error": "Âä†ËΩΩÈîôËØØÔºö{error}",
        "builder.saved.delete_button": "Âà†Èô§",
        "builder.saved.delete_success": "Á≠ñÁï•Â∑≤Âà†Èô§ÔºÅ",
        "builder.saved.empty": "ÁõÆÂâçËøòÊ≤°Êúâ‰øùÂ≠òÁöÑÁ≠ñÁï•ÔºåÂø´ÂéªÂÆö‰πâÁ≠ñÁï•Ê†áÁ≠æÈ°µÂàõÂª∫‰∏Ä‰∏™ÂêßÔºÅ",
        
        # Settings Page
        "settings.title": "ËÆæÁΩÆ",
        "settings.subtitle": "ÈÖçÁΩÆÂ∫îÁî®ËÆæÁΩÆÂíå LLM ÈõÜÊàê",
        
        # LLM Configuration
        "settings.llm.header": "LLM ÈÖçÁΩÆ",
        "settings.llm.description": "ÈÖçÁΩÆ AI Ê®°ÂûãÁî®‰∫éËá™ÁÑ∂ËØ≠Ë®ÄÁ≠ñÁï•Ëß£Êûê„ÄÇÊîØÊåÅ OpenAI (GPT) Âíå Anthropic (Claude)„ÄÇ",
        "settings.llm.add_config": "‚ûï Ê∑ªÂä†Êñ∞ LLM ÈÖçÁΩÆ",
        "settings.llm.form_title": "LLM Êèê‰æõÂïÜËÆæÁΩÆ",
        "settings.llm.provider_label": "Êèê‰æõÂïÜ",
        "settings.llm.provider_help": "ÈÄâÊã© OpenAI (GPT Ê®°Âûã) Êàñ Anthropic (Claude Ê®°Âûã)",
        "settings.llm.model_label": "Ê®°Âûã",
        "settings.llm.model_help": "ÈÄâÊã©Ë¶Å‰ΩøÁî®ÁöÑÂÖ∑‰ΩìÊ®°ÂûãÁâàÊú¨",
        "settings.llm.api_key_label": "API ÂØÜÈí•",
        "settings.llm.api_key_help": "ËæìÂÖ•ÊÇ®ÁöÑ API ÂØÜÈí•ÔºàÂ∞ÜË¢´ÂÆâÂÖ®Â≠òÂÇ®Âπ∂Âú®ÁïåÈù¢‰∏≠ÈöêËóèÔºâ",
        "settings.llm.api_key_required": "API ÂØÜÈí•ÊòØÂøÖÈúÄÁöÑ",
        "settings.llm.save_button": "üíæ ‰øùÂ≠òÈÖçÁΩÆ",
        "settings.llm.save_success": "‚úì LLM ÈÖçÁΩÆÂ∑≤‰øùÂ≠òÂπ∂ÊøÄÊ¥ªÔºÅ",
        "settings.llm.current_config": "ÂΩìÂâçÊ¥ªÂä®ÈÖçÁΩÆ",
        "settings.llm.config_updated": "ÊúÄÂêéÊõ¥Êñ∞Ôºö{date}",
        "settings.llm.delete_button": "üóëÔ∏è Âà†Èô§",
        "settings.llm.delete_success": "ÈÖçÁΩÆÂà†Èô§ÊàêÂäü",
        "settings.llm.all_configs": "ÊâÄÊúâÂ∑≤‰øùÂ≠òÈÖçÁΩÆ",
        "settings.llm.no_configs": "Â∞öÊú™‰øùÂ≠ò LLM ÈÖçÁΩÆ„ÄÇÂú®‰∏äÊñπÊ∑ªÂä†‰∏Ä‰∏™‰ª•ÂêØÁî® AI È©±Âä®ÁöÑÁ≠ñÁï•Ëß£Êûê„ÄÇ",
        "settings.llm.created": "ÂàõÂª∫Êó∂Èó¥",
        "settings.llm.status": "Áä∂ÊÄÅ",
        "settings.llm.active": "Ê¥ªÂä®",
        "settings.llm.inactive": "Êú™ÊøÄÊ¥ª",
        "settings.llm.activate_button": "‚úÖ ÊøÄÊ¥ª",
        "settings.llm.activate_success": "ÈÖçÁΩÆÊøÄÊ¥ªÊàêÂäü",
        "settings.llm.test_header": "ÊµãËØï LLM ËøûÊé•",
        "settings.llm.test_input_label": "ÊµãËØïÁ≠ñÁï•ÊèèËø∞",
        "settings.llm.test_button": "üß™ ÊµãËØïËøûÊé•",
        "settings.llm.test_spinner": "Ê≠£Âú®ÊµãËØï LLM ËøûÊé•‚Ä¶‚Ä¶",
        "settings.llm.test_success": "‚úì LLM ËøûÊé•ÊàêÂäüÔºÅ",
        "settings.llm.test_show_results": "Êü•ÁúãÊµãËØïÁªìÊûú",
        "settings.llm.test_error": "ÊµãËØïÂ§±Ë¥•Ôºö{error}",
        "settings.llm.test_no_config": "Ê≤°ÊúâÊ¥ªÂä®ÁöÑ LLM ÈÖçÁΩÆ„ÄÇÂú®‰∏äÊñπÊ∑ªÂä†‰∏Ä‰∏™‰ª•ËøõË°åÊµãËØï„ÄÇ",
        
        # Strategy Builder LLM status
        "builder.define.llm_active": "LLM Â∑≤ÊøÄÊ¥ª",
        "builder.define.llm_inactive": "‚ö†Ô∏è Êú™ÈÖçÁΩÆ LLM„ÄÇ‰ΩøÁî®Âü∫‰∫éËßÑÂàôÁöÑËß£Êûê„ÄÇÂú®ËÆæÁΩÆÈ°µÈù¢ÈÖçÁΩÆ LLM ‰ª•Ëé∑ÂæóÊõ¥Â•ΩÁöÑÁªìÊûú„ÄÇ",
        
        "results.title": "ÂõûÊµãÁªìÊûú",
        "results.subtitle": "ÂàÜÊûêÂõûÊµãÁª©Êïà‰∏éÊ†∏ÂøÉÊåáÊ†á",
        "results.info.no_completed": "ÊöÇÊó†Â∑≤ÂÆåÊàêÁöÑÂõûÊµãÔºåËØ∑ÂÖàÂú®‚ÄúÂõûÊµã‚ÄùÈ°µÈù¢ËøêË°å‰∏ÄÊ¨°„ÄÇ",
        "results.section.select": "ÈÄâÊã©ÂõûÊµã",
        "results.form.choose_backtest": "ÈÄâÊã©ÂõûÊµãËÆ∞ÂΩï",
        "results.warning.no_metrics": "ËØ•ÂõûÊµãÊöÇÊú™ÁîüÊàêÊåáÊ†áÊï∞ÊçÆ",
        "results.section.summary": "Áª©ÊïàÊ¶ÇËßà",
        "results.metric.total_return": "ÊÄªÊî∂ÁõäÁéá",
        "results.metric.sharpe": "Â§èÊôÆÊØîÁéá",
        "results.metric.max_dd": "ÊúÄÂ§ßÂõûÊí§",
        "results.metric.excess_return": "Ë∂ÖÈ¢ùÊî∂Áõä",
        "results.metric.cagr": "Âπ¥ÂåñÊî∂ÁõäÁéá",
        "results.metric.sortino": "Á¥¢ÊèêËØ∫ÊØîÁéá",
        "results.metric.calmar": "Âç°Â∞îÁéõÊØîÁéá",
        "results.tabs.equity": "üìà ÊùÉÁõäÊõ≤Á∫ø",
        "results.tabs.metrics": "üìä ÊåáÊ†á",
        "results.tabs.trades": "üìù ‰∫§ÊòìËÆ∞ÂΩï",
        "results.tabs.benchmark": "üéØ Âü∫ÂáÜÂØπÊØî",
        "results.tabs.details": "üìã ËØ¶ÊÉÖ",
        "results.tabs.equity_header": "ÊùÉÁõäËµ∞Âäø",
        "results.tabs.metrics_header": "Áª©ÊïàÊåáÊ†á",
        "results.tabs.trades_header": "Êàê‰∫§ÊòéÁªÜ",
        "results.tabs.benchmark_header": "Âü∫ÂáÜÊØîËæÉ",
        "results.chart.equity_trend": "ÊùÉÁõäËµ∞Âäø",
        "results.chart.daily_returns": "ÊØèÊó•Áõà‰∫è",
        "results.caption.sessions": "ÁõàÂà©Â§©Êï∞Ôºö{gains} | ‰∫èÊçüÂ§©Êï∞Ôºö{losses}",
        "results.section.top_gains": "ÊúÄÈ´òÊî∂ÁõäÊó•",
        "results.section.top_losses": "ÊúÄÂ§ß‰∫èÊçüÊó•",
        "results.info.no_gain_sessions": "Â∞öÊó†ÁõàÂà©Êó•ËÆ∞ÂΩï",
        "results.info.no_loss_sessions": "Â∞öÊó†‰∫èÊçüÊó•ËÆ∞ÂΩï",
        "results.info.no_equity": "ÂΩìÂâçÂõûÊµãÂ∞öÊú™ËÆ∞ÂΩïÊùÉÁõäÊõ≤Á∫øÊï∞ÊçÆ„ÄÇ",
        "results.table.metric": "ÊåáÊ†á",
        "results.table.value": "Êï∞ÂÄº",
        "results.text.benchmarks": "**Âü∫ÂáÜÔºö** {benchmarks}",
        "results.warning.no_benchmark_data": "Êú™ÊâæÂà∞Âü∫ÂáÜÊï∞ÊçÆÔºåËØ∑ÂÖàÂú®‚ÄúÊï∞ÊçÆ‚ÄùÈ°µÈù¢‰∏ãËΩΩÁõ∏Â∫îË°åÊÉÖ„ÄÇ",
        "results.info.no_benchmarks": "ËØ•ÂõûÊµãÊú™ÈÄâÊã©Âü∫ÂáÜ",
        "results.benchmark.symbol": "‰ª£Á†Å",
        "results.benchmark.outperformance": "Á≠ñÁï•Ë∂ÖÈ¢ùÊî∂Áõä",
        "results.section.configuration": "ÂõûÊµãÈÖçÁΩÆ",
        "results.config.backtest_id": "**ÂõûÊµã IDÔºö** {value}",
        "results.config.strategy": "**Á≠ñÁï•Ôºö** {value}",
        "results.config.status": "**Áä∂ÊÄÅÔºö** {value}",
        "results.config.created": "**ÂàõÂª∫Êó∂Èó¥Ôºö** {value}",
        "results.config.universe": "**‰∫§ÊòìÊ†áÁöÑÔºö** {value}",
        "results.config.start": "**ÂºÄÂßãÊó•ÊúüÔºö** {value}",
        "results.config.end": "**ÁªìÊùüÊó•ÊúüÔºö** {value}",
        "results.config.initial_cash": "**ÂàùÂßãËµÑÈáëÔºö** {value}",
        "results.section.strategy_definition": "Á≠ñÁï•ÂÆö‰πâ",
        "results.section.export": "ÂØºÂá∫ÁªìÊûú",
        "results.button.export_json": "ÂØºÂá∫ JSON",
        "results.button.download_json": "‰∏ãËΩΩ JSON",
        "results.button.export_metrics": "ÂØºÂá∫ÊåáÊ†á CSV",
        "results.button.download_csv": "‰∏ãËΩΩ CSV",
        "results.info.export_html": "HTML ÂØºÂá∫ÂäüËÉΩÂç≥Â∞Ü‰∏äÁ∫ø",
        "results.gain_loss.date": "Êó•Êúü",
        "results.gain_loss.return": "Êî∂ÁõäÁéáÔºà%Ôºâ",
        "results.gain_loss.value": "ÁªÑÂêàÂ∏ÇÂÄºÔºàÁæéÂÖÉÔºâ",
        "results.gain_loss.pnl": "Á¥ØËÆ°Áõà‰∫èÔºàÁæéÂÖÉÔºâ",
        "results.trades.metric.trades": "‰∫§ÊòìÁ¨îÊï∞",
        "results.trades.metric.realized": "Â∑≤ÂÆûÁé∞Áõà‰∫è",
        "results.trades.metric.win_rate": "ËÉúÁéá",
        "results.trades.metric.avg_allocation": "Âπ≥Âùá‰ªì‰ΩçÊØî‰æã",
        "results.trades.caption.avg_hold": "Âπ≥ÂùáÊåÅ‰ªìÊó∂ÈïøÔºö{bars} Ê†πKÁ∫ø",
        "results.trades.no_data": "Êú¨Ê¨°ÂõûÊµãÊ≤°Êúâ‰∫ßÁîü‰ªª‰Ωï‰∫§Êòì„ÄÇ",
        "results.trades.column.timestamp": "Êó•Êúü",
        "results.trades.column.symbol": "Ê†áÁöÑ",
        "results.trades.column.action": "ÊñπÂêë",
        "results.trades.column.size": "Êï∞Èáè",
        "results.trades.column.price": "‰ª∑Ê†º",
        "results.trades.column.value": "Êàê‰∫§ÈáëÈ¢ù",
        "results.trades.column.commission": "‰Ω£Èáë",
        "results.trades.column.pnl": "Áõà‰∫è",
        "results.trades.column.pnl_pct": "Áõà‰∫èÁôæÂàÜÊØî",
        "results.trades.column.alloc_pct": "‰ªì‰ΩçÊØî‰æã",
        "results.trades.column.holding": "ÊåÅÊúâbarÊï∞",
        "results.trades.column.reason": "Ëß¶ÂèëÂéüÂõ†",
        "app.nav.home": "üè† È¶ñÈ°µ",
        "app.nav.data": "üì¶ Êï∞ÊçÆ",
        "app.nav.builder": "üõ†Ô∏è Á≠ñÁï•ÊûÑÂª∫",
        "app.nav.backtest": "üöÄ ÂõûÊµã",
    "app.nav.results": "üìä ÁªìÊûú",
    "app.nav.settings": "‚öôÔ∏è ËÆæÁΩÆ",
    },
}

def _init_language_state():
    import streamlit as st

    if "language" not in st.session_state:
        st.session_state["language"] = _DEFAULT_LANGUAGE


def get_language() -> str:
    """Return the current UI language code."""
    import streamlit as st

    _init_language_state()
    return str(st.session_state.get("language", _DEFAULT_LANGUAGE))


def set_language(lang: str) -> None:
    """Set the current UI language code."""
    import streamlit as st

    _init_language_state()
    codes = {code for code, _ in _LANGUAGE_CHOICES}
    st.session_state["language"] = lang if lang in codes else _DEFAULT_LANGUAGE


def t(key: str, **kwargs) -> str:
    """Translate a string by key with optional formatting."""
    language = get_language()
    template = TRANSLATIONS.get(language, {}).get(key)

    if template is None:
        template = TRANSLATIONS.get(_DEFAULT_LANGUAGE, {}).get(key, key)

    if kwargs:
        try:
            return template.format(**kwargs)
        except KeyError:
            return template
    return template


def use_language_selector() -> str:
    """Render a sidebar language selector and return the selected code."""
    import streamlit as st

    _init_language_state()
    label = t("common.language_label")
    options = [label for _, label in _LANGUAGE_CHOICES]
    current_code = get_language()
    code_to_label = {code: label for code, label in _LANGUAGE_CHOICES}
    label_to_code = {label: code for code, label in _LANGUAGE_CHOICES}
    current_label = code_to_label.get(current_code, options[0])
    try:
        current_index = options.index(current_label)
    except ValueError:
        current_index = 0

    selected_label = st.sidebar.selectbox(
        label,
        options,
        index=current_index,
        key=_LANGUAGE_WIDGET_KEY,
    )

    selected_code = label_to_code.get(selected_label, _DEFAULT_LANGUAGE)
    if selected_code != current_code:
        set_language(selected_code)

    st.markdown(
        """
        <style>
        [data-testid="stSidebarNav"] { display: none; }
        </style>
        """,
        unsafe_allow_html=True,
    )

    st.sidebar.divider()
    st.sidebar.markdown(t("app.sidebar.navigation_heading"))
    st.sidebar.page_link("app.py", label=t("app.nav.home"))
    st.sidebar.page_link("pages/1_Data.py", label=t("app.nav.data"))
    st.sidebar.page_link("pages/2_Strategy_Builder.py", label=t("app.nav.builder"))
    st.sidebar.page_link("pages/3_Backtest.py", label=t("app.nav.backtest"))
    st.sidebar.page_link("pages/4_Results.py", label=t("app.nav.results"))
    st.sidebar.page_link("pages/5_Settings.py", label=t("app.nav.settings"))
    st.sidebar.divider()

    return get_language()
